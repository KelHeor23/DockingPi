/*!
    \file
    \brief Класс работы с сервой DS3235_270
    \author Князев А.И

    Класс для работы с сервой. Область поворота сервы - 270 градусов
*/
#ifndef SERVO_DS3235_270_H
#define SERVO_DS3235_270_H


#include <cstdint>
#include <wiringPi.h>
#include <softPwm.h>

class Servo_DS3235_270
{
public:
    /// \brief enum, хранящий области поворота сервы. CV - по часовой, CCV - против часовой
    enum PWM {
        /// Максимальное отклонение против часовой стрелки ~135 градусов
        CCV10 = 5,
        CCV9 = 6,
        CCV8 = 7,
        CCV7 = 8,
        CCV6 = 9,
        CCV5 = 10,
        CCV4 = 11,
        CCV3 = 12,
        CCV2 = 13,
        /// Минимальное отклонение против часовой стрелки
        CCV1 = 14,
        /// Нейтральное положение/стартовое
        NEUTRAL = 15,
        /// Минимальное отклонение по часовой стрелке
        CV1 = 16,
        CV2 = 17,
        CV3 = 18,
        CV4 = 19,
        CV5 = 20,
        CV6 = 21,
        CV7 = 22,
        CV8 = 23,
        CV9 = 24,
        /// Максимальное отклонение по часовой стрелке ~135 градусов
        CV10 = 25
    };

public:
    Servo_DS3235_270() = delete;

    /*!
        \brief Конструктор запоминающий пин, к которому подключена серва
        \param[in] pin Номер пина
    */
    Servo_DS3235_270(uint8_t pin);

    /*!
        \brief Передача в серву импульса определенной ширины, для его поворота.
        \param[in] pwm Ширина импульса. Значения из enum PWM
    */
    void writePWM(PWM pwm);

private:
    int m_pin = 0;  ///< Пин которому присоединена серва
};

#endif // SERVO_DS3235_270_H
